version: '3'
services:
    frontend-nginx:
        build:
            context: ./frontend/docker
            dockerfile: nginx.docker
        volumes:
            - ./frontend:/var/www/frontend
        depends_on:
            - api-php-fpm
        ports:
            - "8080:80"

    frontend-nodejs:
        # image: node:20.9.0-bookworm
        build:
            context: ./frontend/docker
            dockerfile: nodejs.docker
        volumes:
            - ./frontend:/var/www/frontend
        working_dir: /var/www/frontend
        tty: true

    api-nginx:
        build:
            context: ./api/docker
            dockerfile: nginx.docker
        volumes:
            - ./api:/var/www/api
        ports:
            - "8081:80"
        depends_on:
            - api-php-fpm

    api-php-fpm:
        build:
            context: ./api/docker
            dockerfile: php-fpm.docker
        volumes:
            - ./api:/var/www/api
        depends_on:
            - api-postgres
            - mailer

    api-php-cli:
        build:
            context: ./api/docker
            dockerfile: php-cli.docker
        volumes:
            - ./api:/var/www/api
        depends_on:
            - api-postgres
            - mailer
        working_dir: /var/www/api
        tty: true

    api-postgres:
        image: postgres:9.6-alpine
        volumes:
            - ./api/var/docker/postgres:/var/lib/postgresql/data
        environment:
            - "POSTGRES_USER=api"
            - "POSTGRES_PASSWORD=secret"
            - "POSTGRES_DB=api"
        ports:
            - "54321:5432"

    mailer:
        # image: mailhog/mailhog # only for arm64
        # image: sashas777/mailhog:arm64v8 # only for arm64
        image: dorayy/mailhog # ffdf
        restart: unless-stopped
        ports:
            - "1025:1025"
            - "8082:8025"